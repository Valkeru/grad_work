security:
    role_hierarchy:
        ROLE_ADMIN: [ROLE_EMPLOYEE]
        ROLE_CUSTOMER: [ROLE_CUSTOMER_BLOCKED]

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        in_memory: { memory: ~ }
        customer_provider:
            id: app.public.customer_provider
        employee_provider:
            id: app.private.employee_provider

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
#    -   host: '%app.public_host%'
#        allow_if: "request.server.get('PUBLIC_ENABLED') == 1"
    # - { path: ^/admin, roles: ROLE_ADMIN }
    # - { path: ^/profile, roles: ROLE_USER }

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        open_routes_public:
            host: '%app.public_host%'
            pattern: ^/v\d/(auth/login|register)
            security: true
            anonymous: true
        open_routes_internal:
            host: '%app.private_host%'
            pattern: ^/(login|logout)
            security: false
        public:
            host: '%app.public_host%'
            pattern: ^/v\d/
            anonymous: false
            stateless: true
            simple_preauth:
                authenticator: App\Security\CustomerTokenAuthenticator
            provider: customer_provider
        private:
            host: '%app.private_host%'
            anonymous: false
            stateless: true
            simple_preauth:
                authenticator: App\Security\EmployeeTokenAuthenticator
            provider: employee_provider

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html
