syntax = 'proto3';

package valkeru.api.privateApi.cron;
option php_namespace = "Valkeru\\PrivateApi\\Cron";
import "google/api/annotations.proto";
import "valkeru/api/privateApi/structures.proto";

service CronService {
    rpc taskList (TaskListRequest) returns (TaskListResponse) {
        option (google.api.http) = {
            get: "/cron/{cust_id}"
        };
    }

    rpc taskInfo (TaskInfoRequest) returns (TaskInfoResponse) {
        option (google.api.http) = {
            get: "/cron/{id}"
        };
    }

    rpc addTask (NewTaskRequest) returns (NewTaskResponse) {
        option (google.api.http) = {
            put: "/cron"
            body: "*"
        };
    }

    rpc deleteTask (DeleteTaskRequest) returns (DeleteTaskResponse) {
        option (google.api.http) = {
            delete: "/cron/{id}"
            body: "*"
        };
    }

    rpc editTask (EditTaskRequest) returns (EditTaskResponse) {
        option (google.api.http) = {
            post: "/cron/{id}"
            body: "*"
        };
    }

    rpc enableTask (EnableTaskRequest) returns (EnableTaskResponse) {
        option (google.api.http) = {
            get: "/cron/{id}/enable"
        };
    }

    rpc disableTask (DisableTaskRequest) returns (DisableTaskResponse) {
        option (google.api.http) = {
            get: "/cron/{id}/disable"
        };
    }
}

message TaskListRequest {
    uint32 cust_id = 1;
}

message TaskListResponse {
    oneof result {
        Success success = 1;
        Error error = 2;
    }

    message Success {
        repeated structures.CronTask tasks = 1;
    }

    message Error {
        Code code = 1;
        string message = 2;

        enum Code {
            _ = 0;
        }
    }
}

message TaskInfoRequest {
    uint32 id = 1;
}

message TaskInfoResponse {
    oneof result {
        Success success = 1;
        Error error = 2;
    }

    message Success {
        structures.CronTask task = 1;
    }

    message Error {
        Code code = 1;
        string message = 2;

        enum Code {
            _ = 0;
        }
    }
}

message NewTaskRequest {
    uint32 cust_id = 1;
    repeated uint32 minutes = 2;
    repeated uint32 hours = 3;
    repeated uint32 days = 4;
    repeated uint32 months = 5;
    repeated uint32 weekdays = 6;
    string command = 7;
    bool disable = 8;
}

message NewTaskResponse {
    oneof result {
        Success success = 1;
        Error error = 2;
    }

    message Success {
        structures.CronTask task = 1;
    }

    message Error {
        Code code = 1;
        string message = 2;

        enum Code {
            _ = 0;
        }
    }
}

message DeleteTaskRequest {
    uint32 id = 1;
}

message DeleteTaskResponse {
    oneof result {
        Success success = 1;
        Error error = 2;
    }

    message Success {
    }

    message Error {
        Code code = 1;
        string message = 2;

        enum Code {
            _ = 0;
        }
    }
}

message EditTaskRequest {
    repeated uint32 minutes = 1;
    repeated uint32 hours = 2;
    repeated uint32 days = 3;
    repeated uint32 months = 4;
    repeated uint32 weekdays = 5;
    string command = 6;
}

message EditTaskResponse {
    oneof result {
        Success success = 1;
        Error error = 2;
    }

    message Success {
        structures.CronTask task = 1;
    }

    message Error {
        Code code = 1;
        string message = 2;

        enum Code {
            _ = 0;
        }
    }
}

message EnableTaskRequest {
    uint32 id = 1;
}

message EnableTaskResponse {
    oneof result {
        Success success = 1;
        Error error = 2;
    }

    message Success {
        structures.CronTask task = 1;
    }

    message Error {
        Code code = 1;
        string message = 2;

        enum Code {
            _ = 0;
        }
    }
}

message DisableTaskRequest {
    uint32 id = 1;
}

message DisableTaskResponse {
    oneof result {
        Success success = 1;
        Error error = 2;
    }

    message Success {
        structures.CronTask task = 1;
    }

    message Error {
        Code code = 1;
        string message = 2;

        enum Code {
            _ = 0;
        }
    }
}
