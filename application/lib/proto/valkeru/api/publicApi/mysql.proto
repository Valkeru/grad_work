syntax = 'proto3';

package valkeru.api.publicApi.mysql;
option php_namespace = "Valkeru\\PublicApi\\Mysql";
import "google/api/annotations.proto";
import "valkeru/api/publicApi/structures.proto";

service MysqlService {
    rpc databaseList (DatabaseListRequest) returns (DatabaseListResponse) {
        option (google.api.http) = {
            get: "/v1/mysql"
        };
    }

    rpc databaseInfo (DatabaseInfoRequest) returns (DatabaseInfoResponse) {
        option (google.api.http) = {
            get: "/v1/mysql/{id}"
        };
    }

    rpc addDatabase (AddDatabaseRequest) returns (AddDatabaseResponse) {
        option (google.api.http) = {
            put: "/v1/mysql"
            body: "*"
        };
    }

    rpc deleteDatabase (DeleteDatabaseRequest) returns (DeleteDatabaseResponse) {
        option (google.api.http) = {
            delete: "/v1/mysql/{id}"
        };
    }

    rpc addRemoteAccess (AddRemoteAccessRequest) returns (AddRemoteAccessResponse) {
        option (google.api.http) = {
            put: "/v1/mysql/access"
            body: "*"
        };
    }

    rpc removeRemoteAccess (RemoveRemoteAccessRequest) returns (RemoveRemoteAccessResponse) {
        option (google.api.http) = {
            delete: "/v1/mysql/access"
            body: "*"
        };
    }
}

message DatabaseListRequest {
}

message DatabaseListResponse {
    oneof result {
        Success success = 1;
        Error error = 2;
    }

    message Success {
        repeated structures.MysqlDatabase databases = 1;
    }

    message Error {
        Code code = 1;
        string message = 2;

        enum Code {
            _ = 0;
        }
    }
}

message DatabaseInfoRequest {
    uint32 id = 1;
}

message DatabaseInfoResponse {
    oneof result {
        Success success = 1;
        Error error = 2;
    }

    message Success {
        structures.MysqlDatabase database = 1;
    }

    message Error {
        Code code = 1;
        string message = 2;

        enum Code {
            _ = 0;
        }
    }
}

message AddDatabaseRequest {
    string suffix = 1;
}

message AddDatabaseResponse {
    oneof result {
        Success success = 1;
        Error error = 2;
    }

    message Success {
        structures.MysqlDatabase database = 1;
    }

    message Error {
        Code code = 1;
        string message = 2;

        enum Code {
            _ = 0;
            DATABASE_EXISTS = 1;
        }
    }
}

message DeleteDatabaseRequest {
    uint32 id = 1;
}

// Пустой ответ при успехе
message DeleteDatabaseResponse {
    Error error = 2;

    message Error {
        Code code = 1;
        string message = 2;

        enum Code {
            _ = 0;
        }
    }
}

message AddRemoteAccessRequest {
    uint32 database_id = 1;
    string host = 2;
    string password = 3;
}

message AddRemoteAccessResponse {
    oneof result {
        Success success = 1;
        Error error = 2;
    }

    message Success {
        structures.MysqlDatabase database = 1;
    }

    message Error {
        Code code = 1;
        string message = 2;

        enum Code {
            _ = 0;
            REMOTE_ACCESS_ALREADY_EXISTS = 1;
        }
    }
}

message RemoveRemoteAccessRequest {
    uint32 database_id = 1;
    string host = 2;
}

message RemoveRemoteAccessResponse {
    oneof result {
        Success success = 1;
        Error error = 2;
    }

    message Success {
        structures.MysqlDatabase database = 1;
    }

    message Error {
        Code code = 1;
        string message = 2;

        enum Code {
            _ = 0;
            REMOTE_ACCESS_NOT_FOUND = 1;
        }
    }
}
