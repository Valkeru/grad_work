syntax = 'proto3';

package valkeru.api.publicApi.mail;
option php_namespace = "Valkeru\\PublicApi\\Mail";
import "google/api/annotations.proto";
import "valkeru/api/publicApi/structures.proto";

service MailService {
    rpc mailboxList (MailboxListRequest) returns (MailboxListResponse) {
        option (google.api.http) = {
            post: "/v1/mail"
            body: "*"
        };
    }

    rpc mailboxInfo (MailboxInfoRequest) returns (MailboxInfoResponse) {
        option (google.api.http) = {
            get: "/v1/mail/{id}"
        };
    }

    rpc addMailbox (AddMailboxRequest) returns (AddMailboxResponse) {
        option (google.api.http) = {
            put: "/v1/mail"
            body: "*"
        };
    }

    rpc deleteMailbox (DeleteMailboxRequest) returns (DeleteMailboxResponse) {
        option (google.api.http) = {
            delete: "/v1/mail/{id}"
            body: "*"
        };
    }
}

message MailboxListRequest {
    uint32 domain_id = 1;
}

message MailboxListResponse {
    oneof result {
        Success success = 1;
        Error error = 2;
    }

    message Success {
        repeated structures.Mailbox mailboxes = 1;
    }

    message Error {
        Code code = 1;
        string message = 2;

        enum Code {
            _ = 0;
        }
    }
}

message MailboxInfoRequest {
    uint32 id = 1;
}

message MailboxInfoResponse {
    oneof result {
        Success success = 1;
        Error error = 2;
    }

    message Success {
        structures.Mailbox mailbox = 1;
    }

    message Error {
        Code code = 1;
        string message = 2;

        enum Code {
            _ = 0;
        }
    }
}

message AddMailboxRequest {
    string name = 1;
    uint32 domain_id = 2;
}

message AddMailboxResponse {
    oneof result {
        Success success = 1;
        Error error = 2;
    }

    message Success {
        structures.Mailbox mailbox = 1;
    }

    message Error {
        Code code = 1;
        string message = 2;

        enum Code {
            _ = 0;
            DOMAIN_NOT_FOUND = 1;
            MAILBOX_ALREADY_EXISTS = 2;
        }
    }
}

message DeleteMailboxRequest {
    uint32 id = 1;
}

// Пустой ответ при успехе
message DeleteMailboxResponse {
    Error error = 2;

    message Error {
        Code code = 1;
        string message = 2;

        enum Code {
            _ = 0;
        }
    }
}

message ChangePasswordRequest {
    uint32 id = 1;
    string password = 2;
}

// Пустой ответ при успехе
message ChangePasswordResponse {
    Error error = 2;

    message Error {
        Code code = 1;
        string message = 2;

        enum Code {
            _ = 0;
        }
    }
}
